"""empty message

Revision ID: 8fec435c49ac
Revises: 0001
Create Date: 2025-08-11 18:29:11.017742

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '8fec435c49ac'
down_revision: Union[str, Sequence[str], None] = '0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contactentrymodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notificationmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchasemodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'SHIPPED', name='purchasestatus'), nullable=False),
    sa.Column('shipping_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_neighborhood', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shippingaddress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('neighborhood', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verificationtoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('verificationtoken', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_verificationtoken_token'), ['token'], unique=True)

    op.create_table('commentmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blogpostmodel.id'], ),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchaseitemmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_at_purchase', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blogpostmodel.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchasemodel.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentvotemodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vote_type', sa.String(), nullable=True),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['commentmodel.id'], ),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commentvotemodel')
    op.drop_table('purchaseitemmodel')
    op.drop_table('commentmodel')
    with op.batch_alter_table('verificationtoken', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_verificationtoken_token'))

    op.drop_table('verificationtoken')
    op.drop_table('shippingaddress')
    op.drop_table('purchasemodel')
    op.drop_table('notificationmodel')
    op.drop_table('contactentrymodel')
    # ### end Alembic commands ###
