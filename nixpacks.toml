# nixpacks.toml
# Este archivo le dice a Nixpacks cómo construir y ejecutar tu backend en Railway.

# Proveedor principal: Python.
providers = ['python']

# Variables para optimizar el entorno de producción.
[variables]
  NEXT_TELEMETRY_DISABLED = '1'
  NPM_CONFIG_UPDATE_NOTIFIER = 'false'
  NPM_CONFIG_FUND = 'false'
  PIP_DISABLE_PIP_VERSION_CHECK = '1'

# Fase de setup: Instala paquetes del sistema operativo.
[phases.setup]
  apt_packages = ["git", "nodejs", "npm", "unzip", "parallel", "build-essential"]

# Fase de inicio: Cómo se ejecuta tu aplicación.
[phases.start]
  # ¡CORRECCIÓN! 
  # 1. Se ejecuta 'reflex db migrate' para aplicar cualquier cambio en la base de datos.
  # 2. '&&' asegura que el siguiente comando solo se ejecute si la migración tiene éxito.
  # 3. 'reflex run --env prod' inicia la aplicación en modo de producción, que es más robusto y usa gunicorn/uvicorn optimizados.
  #    $PORT es una variable que Railway proporciona automáticamente.
  cmd = "reflex db migrate && reflex run --env prod --http-port $PORT"

