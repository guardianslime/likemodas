"""empty message

Revision ID: c9404a488e13
Revises: 
Create Date: 2025-09-19 17:26:55.338936

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'c9404a488e13'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('localauthsession',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('expiration', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('localauthsession', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_localauthsession_session_id'), ['session_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_localauthsession_user_id'), ['user_id'], unique=False)

    op.create_table('localuser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.LargeBinary(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('localuser', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_localuser_username'), ['username'], unique=True)

    op.create_table('passwordresettoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['localuser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('passwordresettoken', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_passwordresettoken_token'), ['token'], unique=True)

    op.create_table('userinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), server_default='customer', nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('ban_expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('seller_barrio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('seller_city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('seller_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['localuser.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('blogpostmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('variants', sa.JSON(), nullable=True),
    sa.Column('publish_active', sa.Boolean(), nullable=False),
    sa.Column('publish_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('category', sa.String(), server_default='otros', nullable=False),
    sa.Column('shipping_cost', sa.Float(), nullable=True),
    sa.Column('is_moda_completa_eligible', sa.Boolean(), nullable=False),
    sa.Column('combines_shipping', sa.Boolean(), nullable=False),
    sa.Column('shipping_combination_limit', sa.Integer(), nullable=True),
    sa.Column('price_includes_iva', sa.Boolean(), nullable=False),
    sa.Column('is_imported', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contactentrymodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notificationmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchasemodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING_PAYMENT', 'PENDING_SISTECREDITO_URL', 'PENDING_CONFIRMATION', 'CONFIRMED', 'SHIPPED', 'DELIVERED', 'FAILED', 'DIRECT_SALE', name='purchasestatus'), nullable=False),
    sa.Column('shipping_applied', sa.Float(), nullable=True),
    sa.Column('shipping_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_neighborhood', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_direct_sale', sa.Boolean(), nullable=False),
    sa.Column('wompi_transaction_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('wompi_events', sa.JSON(), nullable=True),
    sa.Column('wompi_payment_link_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sistecredito_transaction_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sistecredito_authorization_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sistecredito_invoice', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('estimated_delivery_date', sa.DateTime(), nullable=True),
    sa.Column('delivery_confirmation_sent_at', sa.DateTime(), nullable=True),
    sa.Column('user_confirmed_delivery_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchasemodel', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchasemodel_sistecredito_authorization_code'), ['sistecredito_authorization_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchasemodel_sistecredito_invoice'), ['sistecredito_invoice'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchasemodel_sistecredito_transaction_id'), ['sistecredito_transaction_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_purchasemodel_wompi_payment_link_id'), ['wompi_payment_link_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchasemodel_wompi_transaction_id'), ['wompi_transaction_id'], unique=True)

    op.create_table('shippingaddress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('neighborhood', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verificationtoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('verificationtoken', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_verificationtoken_token'), ['token'], unique=True)

    op.create_table('purchaseitemmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_at_purchase', sa.Float(), nullable=False),
    sa.Column('selected_variant', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blogpostmodel.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchasemodel.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('savedpostlink',
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('blogpostmodel_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blogpostmodel_id'], ['blogpostmodel.id'], ),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('userinfo_id', 'blogpostmodel_id')
    )
    op.create_table('supportticketmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', name='ticketstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['userinfo.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchasemodel.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('purchase_id')
    )
    op.create_table('commentmodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('author_username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author_initial', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('purchase_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blogpostmodel.id'], ),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['commentmodel.id'], ),
    sa.ForeignKeyConstraint(['purchase_item_id'], ['purchaseitemmodel.id'], ),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supportmessagemodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['userinfo.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['supportticketmodel.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentvotemodel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vote_type', sa.String(), nullable=True),
    sa.Column('userinfo_id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['commentmodel.id'], ),
    sa.ForeignKeyConstraint(['userinfo_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commentvotemodel')
    op.drop_table('supportmessagemodel')
    op.drop_table('commentmodel')
    op.drop_table('supportticketmodel')
    op.drop_table('savedpostlink')
    op.drop_table('purchaseitemmodel')
    with op.batch_alter_table('verificationtoken', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_verificationtoken_token'))

    op.drop_table('verificationtoken')
    op.drop_table('shippingaddress')
    with op.batch_alter_table('purchasemodel', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchasemodel_wompi_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_purchasemodel_wompi_payment_link_id'))
        batch_op.drop_index(batch_op.f('ix_purchasemodel_sistecredito_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_purchasemodel_sistecredito_invoice'))
        batch_op.drop_index(batch_op.f('ix_purchasemodel_sistecredito_authorization_code'))

    op.drop_table('purchasemodel')
    op.drop_table('notificationmodel')
    op.drop_table('contactentrymodel')
    op.drop_table('blogpostmodel')
    op.drop_table('userinfo')
    with op.batch_alter_table('passwordresettoken', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_passwordresettoken_token'))

    op.drop_table('passwordresettoken')
    with op.batch_alter_table('localuser', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_localuser_username'))

    op.drop_table('localuser')
    with op.batch_alter_table('localauthsession', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_localauthsession_user_id'))
        batch_op.drop_index(batch_op.f('ix_localauthsession_session_id'))

    op.drop_table('localauthsession')
    # ### end Alembic commands ###
